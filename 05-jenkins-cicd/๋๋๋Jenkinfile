pipeline {
    agent any

    stages {
        stage('Unit Test') {
            steps {
                script {
                    sh 'npm install'
                    sh 'npm test -- --reporter junit --reporters=default'
                    step([$class: 'JUnitResultArchiver', testResults: '**/test-results.xml'])
                }
            }
        }

        stage('OWASP Check') {
            steps {
                script {
                    sh 'npm install -g snyk'
                    sh 'snyk test --json > snyk_report.json'
                    archiveArtifacts artifacts: 'snyk_report.json'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def imageName = "Opsta:latest"
                    sh "docker build -t ${imageName} ."

                    // Push Docker image to your Docker registry
                    sh "docker push ${imageName}"
                }
            }
        }

        stage('Deploy to Kind K8s') {
            steps {
                script {
                    // Deploy to Kind K8s using kubectl or helm
                    sh 'kubectl apply -f your-manifest-file.yaml'
                    // or
                    sh 'helm install your-helm-chart'
                }
            }
        }
    }
}
